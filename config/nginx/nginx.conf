user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;


events {
	worker_connections 4096;
}


http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
	'$status $body_bytes_sent "$http_referer" '
	'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log main;

	sendfile on;
	#tcp_nopush     on;

	keepalive_timeout 65;

	upstream api {
		server backend:3333;
	}

	upstream bot {
		server bot:8000;
	}

	upstream web {
		server webapp:80;
	}

	server {

		listen 80;
		server_name example.com;
		server_tokens off;

		# Redirect to HTTPS
		location / { 
			return 301 https://$host$request_uri;
		}
	}

	server {
		listen 443 ssl;
		server_name example.com;
		server_tokens off;

		ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/cert.key;

		location / {
			proxy_pass http://web$request_uri;
			proxy_redirect off;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
		}

		location /api {
			proxy_pass http://api$request_uri;
			proxy_redirect off;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}

		location /bot {
			proxy_pass http://bot$request_uri;
			proxy_redirect off;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}

		# gzip
		gzip on;
		gzip_vary on;
		gzip_proxied any;
		gzip_comp_level 6;
		gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
	}

	include /etc/nginx/conf.d/*.conf;
}